import styles from "./index.module.css";

// import { type NextPage } from 'next';

import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";

import { trpc } from "../utils/trpc";
import { Button, Flex, Text, Image } from "@mantine/core";
// import Image from "next/image";
import type { NextPage } from "next";
import CreateTweet from "../components/CreateTweet";
import SingleTweet from "../components/SingleTweet";
import { useEffect } from "react";
import useScrollPosition from "../utils/useScrollPosition";
import { Timeline } from "../components/Timeline";

const Home: NextPage = () => {
  const hello = trpc.example.hello.useQuery({ text: "from tRPC" });

  const { data: sessionData } = useSession();

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Flex align={"center"} direction="column">
        <Flex
          direction={"column"}
          miw="800px"
          maw="1000px"
          // justify="space-around"
          // align={"center"}
          gap="lg"
        >
          {/* <button onClick={() => signIn()}>Sign In</button> */}
          <Flex justify="flex-start" direction={"row-reverse"}>
            {!sessionData && (
              <Button
                radius={"xl"}
                color="primaryColor"
                onClick={() => signIn()}
              >
                Sign In
              </Button>
            )}
            {sessionData && (
              <Button
                radius={"xl"}
                color="primaryColor"
                onClick={() => signOut()}
              >
                Sign Out
              </Button>
            )}
            <Text
              // m="50px 200px 20px 200px"
              // justify="center"
              p="10px"
            >
              {JSON.stringify(sessionData?.user?.name)}
            </Text>
            <Image
              radius="xl"
              src={sessionData?.user?.image}
              alt="avatar"
              width={40}
              height={40}
            />
          </Flex>
          {/* <Flex justify="flex-end"></Flex> */}

          <Text>{hello.data?.greeting}</Text>
          <Timeline />
          {/* <CreateTweet />
          {tweets.map((tweet) => (
            <SingleTweet key={tweet.id} tweet={tweet} />
          ))}
          {!hasNextPage && <p>No more items to load</p>}
          <Button
            disabled={!hasNextPage && !isFetching}
            onClick={() => fetchNextPage()}
          >
            Load more
          </Button> */}
        </Flex>
      </Flex>
    </>
  );
};

export default Home;

// const AuthShowcase: React.FC = () => {
//   const { data: sessionData } = useSession();

//   const { data: secretMessage } = trpc.auth.getSecretMessage.useQuery(
//     undefined, // no input
//     { enabled: sessionData?.user !== undefined },
//   );

//   return (
//     <div className={styles.authContainer}>
//       <p className={styles.showcaseText}>
//         {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
//         {secretMessage && <span> - {secretMessage}</span>}
//       </p>
//       <button
//         className={styles.loginButton}
//         onClick={sessionData ? () => signOut() : () => signIn()}
//       >
//         {sessionData ? "Sign out" : "Sign in"}
//       </button>
//     </div>
//   );
// };
